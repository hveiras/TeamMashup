@using TeamMashup.Core.Extensions;
@using TeamMashup.Core.I18n;
@using TeamMashup.Server.Areas.Private.Views.Iteration.i18n;

@model TeamMashup.Models.Private.IterationResourcesModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Tenants.cshtml";
}

@{
    var anyReleaseExists = ((object)ViewBag).Has("ReleaseId");
    var releaseHasIterations = ((object)ViewBag).Has("IterationId");
}

<div id="plan">
    <div class="resources">
        <div class="tabbable">

            @{ Html.RenderAction("NavTabs", "ProjectBase", new { activeTab = "Plan" }); }

            <div class="tab-content">
                <div class="tab-pane active">

                    @{ Html.RenderAction("NavPills", "ProjectBase", new { tab = "Plan", activePill = "Resources" }); }

                    <br />

                    @if (anyReleaseExists)
                    {

                        @Html.Action("SelectRelease", "ProjectBase", new
                        {
                            releaseId = ViewBag.ReleaseId,
                            action = "Resources",
                            controller = "Iteration",
                            onlyWithIterations = true
                        })

                        if (releaseHasIterations)
                        {
                        @Html.Action("SelectIteration", "ProjectBase", new
                            {
                                releaseId = ViewBag.ReleaseId,
                                iterationId = ViewBag.IterationId,
                                action = "Resources",
                                controller = "Iteration"
                            })
                        }

                        using (Html.BeginForm("UpdateResources", "Iteration", FormMethod.Post, new { @class = "form-horizontal"}))
                        {
                        <input type="hidden" value="@Model.IterationId" name="IterationId" />
                        <button class="btn btn-default icon-refresh float-right"></button>
                        <div class="h-separator-5"></div>
                        <div class="table-container">
                            <table id="iterationResourcesTable" class="grid-control table table-striped">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th></th>
                                        <th>@Localized.Name</th>
                                        <th>@Localized.Capacity</th>
                                        <th>@Localized.Velocity</th>
                                        <th>@Localized.RealCapacity</th>
                                        <th>@Localized.CapacityInStoryPoints</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.Resources.Count(); i++)
                                    {
                                        var resource = Model.Resources.ToList()[i];
                                        var capacityInStoryPoints = Model.StoryPointValue == 0 ? 0 : (((resource.Capacity * resource.Velocity) / 100) / Model.StoryPointValue);
                                 
                                        <tr>
                                            <td>
                                                <input type="hidden" name="Resources[@i].Id" class="form-control" value="@resource.Id" />
                                            </td>
                                            <td>
                                                <input type="hidden" name="Resources[@i].UserId" class="form-control" value="@resource.UserId"/>
                                            </td>
                                            <td>
                                                @resource.UserName
                                                <input type="hidden" name="Resources[@i].UserName" class="form-control" value="@resource.UserName"/>
                                            </td>
                                            <td>
                                                <input type="text" id="Resources[@i].Capacity" name="Resources[@i].Capacity"  class="form-control fixed-w-50" value="@resource.Capacity" /></td>
                                            <td>
                                                <input type="text" id="Resources[@i].Velocity" name="Resources[@i].Velocity" class="form-control fixed-w-50" value="@resource.Velocity" /></td>
                                            <td>
                                                <span class="badge">@((resource.Capacity * resource.Velocity) / 100)</span>
                                            </td>
                                            <td>
                                                <span class="badge">@capacityInStoryPoints</span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            <div class="form-group">
                                <label for="storypointvalue">@Iteration.StoryPointsPerHour</label>
                                <input type="text" id="storypointvalue" name="storypointvalue" value="@Model.StoryPointValue" class="form-control fixed-w-100" />
                                @Html.ValidationMessageFor(m => m.StoryPointValue)
                            </div>
                        </div>
                            
                        <button id="save" type="submit" class="btn btn-primary">Save</button>
                        }
                    }
                    else
                    {
                        <div class="alert alert-warning">
                            <strong>@Iteration.ResourcesNoIteration.
                            </strong>
                            @Localized.YouCan <a href="@Url.Action("Index", "Iteration")" class="alert-link">@Localized.CreateANewOne</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
